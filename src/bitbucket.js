const composer = require('./composer')
const { request } = require("@octokit/request")

/**
 * List the Bitbucket repos for the specified workspace that are visible when
 * using the given credentials.
 *
 * @param {string} username - A Bitbucket username
 * @param {string} appPassword - A Bitbucket app password
 * @param {string} workspace - The URL slug for a Bitbucket workspace
 * @returns {Promise<string[]>} - List of repos. Example: ["some-owner/some-repo"]
 */
const listRepos = async (username, appPassword, workspace) => {
  let url = `https://api.bitbucket.org/2.0/repositories/${encodeURIComponent(workspace)}` +
            `?fields=${encodeURIComponent('values.full_name,next')}` +
            `&pagelen=100`
  
  const allRepos = []
  let page = 0
  const maxPages = 100
  while (url && (page < maxPages)) {
    page++
    console.log(`Getting page ${page} of results from Bitbucket:\n${url}`)
    const response = await request(`GET ${url}`, {
      headers: {
        authorization: "Basic " + Buffer.from(`${username}:${appPassword}`).toString('base64'),
      },
    })
    url = response.data.next
    const repos = response.data.values
    allRepos.push(...repos)
  }
  
  if (page >= maxPages) {
    console.error(
      `Stopped after retrieving ${page} pages of results from Bitbucket. There may be more.`
    )
  }
  
  return allRepos.map(repo => repo.full_name)
}

module.exports = {
  listRepos
}
